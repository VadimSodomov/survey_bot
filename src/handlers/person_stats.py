import telebot.types

from src.functions.database_funcs import get_questions_answered_user_db, get_questions_for_user_db
from src.init_bot import bot
from src.smilies import smilies


@bot.callback_query_handler(func=lambda callback: callback.data == 'my_stats')
def get_my_stats(callback: telebot.types.CallbackQuery):
    answered_questions = get_questions_answered_user_db(callback.from_user.id)
    all_questions = get_questions_for_user_db()
    if answered_questions:
        questions_choices = []
        for i, c in enumerate(get_questions_answered_user_db(callback.from_user.id, for_stats=True)):
            questions_choices.append(f'üîπ {i+1}. {c[0]} -- {c[1]}')
        stats = "\n\n".join(questions_choices)
        if len(answered_questions) == len(all_questions):
            bot.send_message(
                callback.message.chat.id,
                f'{smilies["checkbox"]} –¢—ã –æ—Ç–≤–µ—Ç–∏–ª(–∞) –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã {smilies["checkbox"]}\n\n{smilies["statistic"]} –¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –æ–ø—Ä–æ—Å–∞:\n\n{stats}'
            )
        else:
            bot.send_message(
                callback.message.chat.id,
                f'–¢—ã –æ—Ç–≤–µ—Ç–∏–ª(–∞) –Ω–∞ {len(answered_questions)}/{len(all_questions)} –≤–æ–ø—Ä–æ—Å–æ–≤ {smilies["ok"]}\n\n{smilies["statistic"]} –¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –æ–ø—Ä–æ—Å–∞:\n\n{stats}'
            )
    else:
        bot.send_message(callback.message.chat.id, '–¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫–∞ —á—Ç–æ –ø—É—Å—Ç–∞, –ø—Ä–æ–π–¥–∏ –æ–ø—Ä–æ—Å –∏ –æ–Ω–∞ –ø–æ—è–≤–∏—Ç—Å—è)')
